# Multi-stage build
FROM node:18-alpine AS builder

RUN npm install -g pnpm@8

WORKDIR /app

COPY package.json pnpm-workspace.yaml pnpm-lock.yaml ./
COPY packages/db/package.json ./packages/db/
COPY packages/shared/package.json ./packages/shared/
COPY packages/connectors/package.json ./packages/connectors/
COPY apps/worker/package.json ./apps/worker/

RUN pnpm install --frozen-lockfile

COPY packages ./packages
COPY apps/worker ./apps/worker
COPY tsconfig.json ./

RUN pnpm --filter @algor/db generate
RUN pnpm --filter @algor/worker build

# Production образ
FROM node:18-alpine

RUN npm install -g pnpm@8

WORKDIR /app

COPY package.json pnpm-workspace.yaml pnpm-lock.yaml ./
COPY packages/db/package.json ./packages/db/
COPY packages/shared/package.json ./packages/shared/
COPY packages/connectors/package.json ./packages/connectors/
COPY apps/worker/package.json ./apps/worker/

RUN pnpm install --prod --frozen-lockfile

COPY --from=builder /app/apps/worker/dist ./apps/worker/dist
COPY --from=builder /app/packages ./packages
COPY packages/db/prisma ./packages/db/prisma

WORKDIR /app/apps/worker

CMD ["node", "dist/main.js"]

